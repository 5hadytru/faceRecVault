{"version":3,"sources":["webpack://face_rec_vault/./src/functions.js","webpack://face_rec_vault/./src/vaultEntry.js","webpack://face_rec_vault/./node_modules/regenerator-runtime/runtime.js","webpack://face_rec_vault/webpack/bootstrap","webpack://face_rec_vault/webpack/runtime/compat get default export","webpack://face_rec_vault/webpack/runtime/define property getters","webpack://face_rec_vault/webpack/runtime/hasOwnProperty shorthand","webpack://face_rec_vault/webpack/runtime/make namespace object","webpack://face_rec_vault/webpack/startup"],"names":["createEncoding","imageB64","data","imageb64","JSON","stringify","fetch","method","body","headers","getCookie","response","handleEncodingResponse","responseObj","responseText","startsWith","redirectText","slice","indexOf","window","location","href","hideLoadingWheel","errorContainer","document","querySelector","innerText","name","cookieValue","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","loader","classList","remove","deleteVaultEntry","username","entryId","createVaultEntry","saveNewComponents","newComponentIDs","newImageB64s","vaultEntry","console","log","size","requestBody","compData","imgCount","forEach","compID","component","id","nameData","mainData","push","dataType","captionData","rawImgB64","caption","saveUpdatedComponents","updatedComponentIDs","saveDeletedComponents","deletedComponentIDs","deletedComponentDataTypes","Array","from","buttonContainer","componentContainer","entryID","parseInt","emptyEntryMsg","style","display","allComponents","getElementsByClassName","currentComponent","item","addEventListener","event","querySelectorAll","e","target","contains","allDeleteBtns","currentDeleteBtn","deleteBtnContainer","parentNode","currentCompID","filter","element","hasChildNodes","createElement","append","newTextTempID","newTextContainer","add","innerHTML","lastChild","newImgTempID","newImgContainer","uploadedImgURL","URL","createObjectURL","files","newImgTag","src","windowHeight","outerHeight","height","Math","ceil","alt","divRow","appendChild","imgCaption","insertBefore","finishedRequests","Set","canvas","context","getContext","imgTag","width","drawImage","toDataURL","then","json","status","reload","error","onunload","click","logOffBtn"],"mappings":"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SAAtB;AACAgH,SAAS,CAACvD,gBAAV,CAA2B,OAA3B,EAAoC,YAAM;AAEtChE,QAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBF,MAAM,CAACC,QAAP,CAAgBC,IAAvC;AACH,CAHD,E;;;;;;;;;;ACjbA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,CAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UC3uBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"vaultEntry-bundle.js","sourcesContent":["import 'regenerator-runtime/runtime'\r\n\r\n/*\r\n\r\n    home page functions\r\n\r\n*/\r\nexport const createEncoding = async (imageB64) => {\r\n\r\n    let data = {\r\n        imageb64: imageB64\r\n    };\r\n    data = JSON.stringify(data);\r\n\r\n    const response = await fetch('http://127.0.0.1:8000/api/encoding/create/', {\r\n        method: \"POST\",\r\n        body: data,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken') // getting the csrf token that django cookiefies\r\n        }\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nexport const handleEncodingResponse = (responseObj) => {\r\n\r\n    const responseText = responseObj.response;\r\n\r\n    if (responseText.startsWith('redirect')){\r\n        const redirectText = responseText.slice(responseText.indexOf('redirect') + 9);\r\n        window.location.href = `http://127.0.0.1:8000/${redirectText}`;\r\n    }\r\n    else{\r\n        hideLoadingWheel();\r\n        const errorContainer = document.querySelector('#errorMsg');\r\n        errorContainer.innerText = \"Try again\";\r\n    }\r\n};\r\n\r\nexport function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport const hideLoadingWheel = () => {\r\n    const loader = document.querySelector('.loader');\r\n    loader.classList.remove('loader');\r\n};\r\n\r\n/*\r\n\r\n    vault overview page functions\r\n\r\n*/\r\n\r\nexport const deleteVaultEntry = async (username, entryId) => {\r\n\r\n    const response = await fetch(`http://127.0.0.1:8000/api/vault/${username}/delete/${entryId}/`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            'X-CSRFToken': getCookie('csrftoken') // getting the csrf token that django cookiefies\r\n        }\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\nexport const createVaultEntry = async (username) => {\r\n\r\n    const response = await fetch(`http://127.0.0.1:8000/api/vault/${username}/create/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'X-CSRFToken': getCookie('csrftoken') // getting the csrf token that django cookiefies\r\n        }\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\n/*\r\n\r\n    vaultEntry page functions\r\n\r\n*/\r\n\r\n/**\r\n * NOTES\r\n * - Obviously should have had a unified function for getting data for POST and PUTs but whatevs\r\n */\r\n\r\nexport const saveNewComponents = async (newComponentIDs, newImageB64s, vaultEntry) => {\r\n\r\n    console.log(`Save new ${newComponentIDs.size}`);\r\n\r\n    // the request body will contain the vault entry ID and a list of components to be POSTed\r\n    let requestBody = {\r\n        vaultEntry: vaultEntry,\r\n        compData: []\r\n    };\r\n\r\n    let imgCount = 0;\r\n    newComponentIDs.forEach(compID => {\r\n\r\n        // getting component and data type\r\n        const component = document.querySelector(`[id$='Container${compID}']`);\r\n        if (component.id.startsWith('t')){\r\n\r\n            // component name and main data\r\n            const nameData = component.querySelector(`#txtName${compID}`).innerText;\r\n            const mainData = component.querySelector(`#txtData${compID}`).innerText;\r\n\r\n            requestBody.compData.push({\r\n                dataType: 'Text',\r\n                name: nameData,\r\n                data: mainData\r\n            });\r\n        }\r\n        else {\r\n\r\n            // checking if the \"Choose File\" button still exists for this image; if so, skip this component\r\n            if (component.querySelector(`.imgData${compID}`)){\r\n                console.log(`Continued on ${compID}; image was never uploaded!`);\r\n                return; // advance the forEach\r\n            }\r\n\r\n            // img name and caption\r\n            const nameData = component.querySelector(`#imgName${compID}`).innerText;\r\n            const captionData = component.querySelector(`#imgCaption${compID}`).innerText;\r\n            \r\n            // get raw image b64\r\n            // assumes the order of images in newComponentIDs is the same as newImageB64s\r\n            const rawImgB64 = newImageB64s[imgCount];\r\n\r\n            requestBody.compData.push({\r\n                dataType: 'Image',\r\n                name: nameData,\r\n                imageB64: rawImgB64,\r\n                caption: captionData\r\n            })\r\n\r\n            imgCount += 1;\r\n        }  \r\n    });\r\n\r\n    // if no images were actually uploaded\r\n    if (requestBody.compData.length == 0){\r\n\r\n        return \"{status: 'Saved 0'}\";\r\n    }\r\n\r\n    // sending request\r\n    console.log(`POST body: ${requestBody}`);\r\n    requestBody = JSON.stringify(requestBody);\r\n    const response = await fetch('http://127.0.0.1:8000/api/vaultEntry/createComponents/', {\r\n        method: \"POST\",\r\n        body: requestBody,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken') // getting the csrf token that django cookiefies\r\n        }\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\nexport const saveUpdatedComponents = async (updatedComponentIDs) => {\r\n\r\n    // the request body will contain the vault entry ID and a list of components to be POSTed\r\n    let requestBody = {\r\n        compData: []\r\n    };\r\n\r\n    let imgCount = 0;\r\n    updatedComponentIDs.forEach(compID => {\r\n\r\n        // getting component and data type\r\n        const component = document.querySelector(`[id$='Container${compID}']`);\r\n        if (component.id.startsWith('t')){\r\n\r\n            // component name and main data\r\n            const nameData = component.querySelector(`#txtName${compID}`).innerText;\r\n            const mainData = component.querySelector(`#txtData${compID}`).innerText;\r\n\r\n            requestBody.compData.push({\r\n                dataType: 'Text',\r\n                name: nameData,\r\n                data: mainData,\r\n                id: compID\r\n            });\r\n        }\r\n        else {\r\n\r\n            // checking if the \"Choose File\" button still exists for this image; if so, skip this component\r\n            if (component.querySelector(`.imgData${compID}`)){ // input tags have imgData classes instead of ids\r\n                console.log(`Continued on ${compID}; image was never uploaded!`);\r\n                return; // advance the forEach\r\n            }\r\n\r\n            // img name and caption\r\n            const nameData = component.querySelector(`#imgName${compID}`).innerText;\r\n            const captionData = component.querySelector(`#imgCaption${compID}`).innerText;\r\n\r\n            requestBody.compData.push({\r\n                dataType: 'Image',\r\n                name: nameData,\r\n                caption: captionData,\r\n                id: compID\r\n            })\r\n\r\n            imgCount += 1;\r\n        }  \r\n    });\r\n\r\n    // if no images were actually uploaded\r\n    if (requestBody.compData.length == 0){\r\n\r\n        return \"{status: 'Updated 0'}\";\r\n    }\r\n\r\n    // sending request\r\n    requestBody = JSON.stringify(requestBody);\r\n    console.log(`PUT body: ${requestBody}`);\r\n    const response = await fetch('http://127.0.0.1:8000/api/vaultEntry/updateComponents/', {\r\n        method: \"PUT\",\r\n        body: requestBody,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken') // getting the csrf token that django cookiefies\r\n        }\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\nexport const saveDeletedComponents = async (deletedComponentIDs, deletedComponentDataTypes) => {\r\n\r\n    let requestBody = {\r\n        deletedComponentDataTypes: deletedComponentDataTypes,\r\n        deletedComponentIDs: Array.from(deletedComponentIDs)\r\n    }\r\n\r\n    requestBody = JSON.stringify(requestBody);\r\n    console.log(`DELETE body: ${requestBody}`);\r\n    const response = await fetch('http://127.0.0.1:8000/api/vaultEntry/deleteComponents/', {\r\n        method: \"DELETE\",\r\n        body: requestBody,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken') // getting the csrf token that django cookiefies\r\n        }\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\n\r\n/*\r\nexport const createImageComponent = (imageB64, orderKey, entryID) => {\r\n\r\n    let data = {\r\n        imageb64: imageB64,\r\n        entryID: entryID,\r\n        orderKey: orderKey\r\n    };\r\n    data = JSON.stringify(data);\r\n\r\n    const response = await fetch('http://127.0.0.1:8000/api/vault/create/', {\r\n        method: \"POST\",\r\n        body: data,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken') // getting the csrf token that django cookiefies\r\n        }\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\nexport const createTextComponent = (name, text, orderKey, entryID) => {\r\n\r\n    let data = {\r\n        name: name, \r\n        text: text,\r\n        orderKey: orderKey,\r\n        entryID: entryID\r\n    };\r\n    data = JSON.stringify(data);\r\n\r\n    const response = await fetch('http://127.0.0.1:8000/api/vault/create/', {\r\n        method: \"POST\",\r\n        body: data,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken') // getting the csrf token that django cookiefies\r\n        }\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\n*/\r\n","import {saveNewComponents, saveUpdatedComponents, saveDeletedComponents} from './functions'\r\n\r\n/*\r\n\r\n    Setting appropriate global variables for the page\r\n\r\n*/\r\nconst buttonContainer = document.querySelector(\"#buttonContainer\");\r\nconst componentContainer = document.querySelector('#components');\r\nconst entryID = parseInt(window.location.href.substring(window.location.href.length - 3));\r\nlet emptyEntryMsg = document.querySelector('#empty');\r\n\r\n// arrays for storing the IDs of edited, new, and initial components\r\n\r\nlet deletedComponentIDs = []; // for DELETE\r\nlet deletedComponentDataTypes = [];\r\n\r\nlet updatedComponentIDs = []; // for PUT\r\n\r\nlet newComponentIDs = []; // for POST\r\n\r\n\r\n/*\r\n\r\n    Processing initial components upon page load by adding event listeners for PUT requests \r\n    and delete buttons\r\n\r\n*/\r\n\r\n// Hiding the log off btn and nav text\r\ndocument.querySelector('#logBtn').style.display = 'none';\r\ndocument.querySelector('#anything').style.display = 'none';\r\n\r\n// Adding an event listener to each component container to mark them for PUT request\r\n// and adding DELETE btn event listeners\r\nif (!emptyEntryMsg){\r\n    \r\n    // Adding an event listener to each component container to mark them for PUT request if clicked\r\n    const allComponents = document.getElementsByClassName('compContainer');\r\n\r\n    for (let i=0; i<allComponents.length; i++){\r\n\r\n        const currentComponent = allComponents.item(i); // shoulda used a NodeList instead (forEach)\r\n\r\n        currentComponent.addEventListener('click', event => {\r\n\r\n            // hiding any visible delete buttons upon clicking the component\r\n            document.querySelectorAll('.deleteBtn').forEach(e => {\r\n                e.style.display = 'none';\r\n            });\r\n\r\n            // showing Delete button upon clicking the component\r\n            currentComponent.querySelector('.deleteBtn').style.display = 'inline-block';\r\n\r\n            // marking for future PUT request if it wasnt the delete button that was pushed\r\n            if (!event.target.classList.contains('deleteBtn')){\r\n\r\n                updatedComponentIDs.push(parseInt(currentComponent.id.slice(12)));\r\n                console.log(`Update pushed ${currentComponent.id.slice(12)}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Adding Delete btn event listeners for removing components and marking for DELETE requests if \r\n    // Delete is clicked\r\n    const allDeleteBtns = document.getElementsByClassName('deleteBtn');\r\n\r\n    for (let i=0; i<allDeleteBtns.length; i++){\r\n\r\n        const currentDeleteBtn = allDeleteBtns.item(i);\r\n\r\n        currentDeleteBtn.addEventListener('click', () => {\r\n\r\n            // marking for future DELETE request and removing from PUT list if in it\r\n            const deleteBtnContainer = currentDeleteBtn.parentNode.parentNode;\r\n            const currentCompID = parseInt(deleteBtnContainer.id.slice(12));\r\n            deletedComponentIDs.push(currentCompID); // component ID appendage\r\n            \r\n            // logging data type for DELETE request\r\n            if (document.querySelector(`#imgContainer${currentCompID}`)){\r\n\r\n                deletedComponentDataTypes.push('Image');\r\n            }\r\n            else{\r\n    \r\n                deletedComponentDataTypes.push('Text');\r\n            }\r\n\r\n            // clearing from updated IDs in case it was previously pushed\r\n            updatedComponentIDs = updatedComponentIDs.filter(element => element != currentCompID);\r\n\r\n            // removing from DOM\r\n            console.log(`Delete pushed ${currentCompID}`);\r\n            deleteBtnContainer.remove(); // removes container and its contents\r\n            if (!componentContainer.hasChildNodes()){\r\n                emptyEntryMsg = document.createElement('p');\r\n                emptyEntryMsg.id = 'empty';\r\n                emptyEntryMsg.innerText = \"This entry is empty!\";\r\n                emptyEntryMsg.style = \"text-align: center;\"\r\n                componentContainer.append(emptyEntryMsg);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n/*\r\n\r\n    Handling the addition of new text components, new image components, and the SAVE button\r\n\r\n*/\r\nbuttonContainer.addEventListener('click', event => {\r\n\r\n    // Create, set up, and display text component\r\n    if (event.target.id == \"addText\"){\r\n\r\n        // create temporary ID for new text and add to newComponents array for\r\n        // a future POST request\r\n        const newTextTempID = -newComponentIDs.length;\r\n        newComponentIDs.push(newTextTempID);\r\n\r\n        // create HTML nodes with proper temp ID\r\n        let newTextContainer = document.createElement('div');\r\n        newTextContainer.id = `txtContainer${newTextTempID}`;\r\n        newTextContainer.classList.add('compContainer', 'my-5', 'mx-auto');\r\n        newTextContainer.style = \"width: 50%;\"\r\n\r\n        newTextContainer.innerHTML = `<p id=\"txtName${newTextTempID}\" class=\"txtName font-weight-bold\" style=\"font-size: x-large; text-align: center\" contenteditable=\"true\" spellcheck=\"false\">TEXTBOX NAME</p>\r\n        <p id=\"txtData${newTextTempID}\" class=\"txtData\" contenteditable=\"true\" spellcheck=\"false\">TEXTBOX DATA</p>\r\n        <div class=\"row justify-content-center\">\r\n            <button id=\"txtDelete${newTextTempID}\" class=\"deleteBtn btn btn-danger\">Delete</button>\r\n        </div>`;\r\n\r\n        // Hiding all currently visible delete buttons\r\n        document.querySelectorAll('.deleteBtn').forEach(e => {\r\n            e.style.display = 'none';\r\n        });\r\n\r\n        // Adding text component to DOM\r\n        componentContainer.append(newTextContainer);\r\n\r\n        // Hiding empty entry message if it's visible (for when this is the first component of the entry)\r\n        if (emptyEntryMsg){\r\n            emptyEntryMsg.style.display = \"none\";\r\n        }\r\n\r\n        // Listening for a click on this component as to make the delete button visible if invisible\r\n        newTextContainer.addEventListener('click', () => {\r\n\r\n            // Hiding all currently visible delete buttons\r\n            document.querySelectorAll('.deleteBtn').forEach(e => {\r\n                e.style.display = 'none';\r\n            });\r\n\r\n            // Showing this component's Delete button\r\n            newTextContainer.lastChild.style.display = 'inline-block';\r\n        })\r\n\r\n        // Adding delete button event listener\r\n        newTextContainer.querySelector('.deleteBtn').addEventListener('click', () => {\r\n\r\n            // removing from DOM and POST list; no need to send a request\r\n            newComponentIDs = newComponentIDs.filter(element => element != newTextTempID);\r\n            newTextContainer.remove();\r\n            if (!componentContainer.hasChildNodes()){\r\n                emptyEntryMsg = document.createElement('p');\r\n                emptyEntryMsg.id = 'empty';\r\n                emptyEntryMsg.innerText = \"This entry is empty!\";\r\n                componentContainer.append(emptyEntryMsg);\r\n            }\r\n        });\r\n\r\n        // NOTE: new components do not need to be marked for possible PUT or DELETE requests!\r\n    }\r\n\r\n    // Create, set up, and display image component\r\n    else if (event.target.id == \"addImage\"){\r\n\r\n        // create temporary ID for new img that will be pushed to newComponentIDs once the img is uploaded\r\n        const newImgTempID = -newComponentIDs.length;\r\n\r\n        // create HTML nodes with proper temp ID\r\n        let newImgContainer = document.createElement('div');\r\n        newImgContainer.id = `imgContainer${newImgTempID}`;\r\n        newImgContainer.classList.add('compContainer', 'my-5');\r\n\r\n        // create name textbox, img upload button, and caption textbox\r\n        newImgContainer.innerHTML = `<p id=\"imgName${newImgTempID}\" class=\"imgName my-2 font-weight-bold\" style=\"font-size: x-large; text-align: center;\" contenteditable=\"true\" spellcheck=\"false\">NAME</p>\r\n        <div class=\"row justify-content-center\">\r\n            <input type=\"file\" id=\"imgUpload${newImgTempID}\" class=\"imgData${newImgTempID} my-2\" accept=\"image/jpeg, image/png\">\r\n        </div>\r\n        <p id=\"imgCaption${newImgTempID}\" class=\"imgCaption my-2\" style=\"text-align: center;\" contenteditable=\"true\" spellcheck=\"false\">CAPTION</p>\r\n        <div class=\"row justify-content-center\">\r\n            <button id=\"imgDelete${newImgTempID}\" class=\"deleteBtn btn btn-danger\">Delete</button>\r\n        </div>`\r\n\r\n        // Adding image component to DOM\r\n        componentContainer.append(newImgContainer);\r\n\r\n        // adding state change listener to input tag to get and display uploaded image\r\n        document.querySelector(`#imgUpload${newImgTempID}`).addEventListener('change', event => {\r\n\r\n            const uploadedImgURL = URL.createObjectURL(event.target.files[0]); // create document path\r\n\r\n            // creating img tag -> removing input tag -> appending img to imgName\r\n            const newImgTag = document.createElement('img');\r\n            newImgTag.src = uploadedImgURL;\r\n\r\n            const windowHeight = window.outerHeight;\r\n            newImgTag.height = Math.ceil(windowHeight / 2);\r\n            newImgTag.id = `imgData${newImgTempID}`;\r\n            newImgTag.classList.add('my-2');\r\n            newImgTag.alt = \"Failed to load image\";\r\n\r\n            // outer img div for centering\r\n            let divRow = document.createElement('div');\r\n            divRow.classList.add('row');\r\n            divRow.classList.add('justify-content-center');\r\n\r\n            divRow.appendChild(newImgTag);\r\n\r\n            event.target.remove(); // removing Choose File button\r\n\r\n            // inserting the image between the name and caption within the container\r\n            const imgCaption = document.querySelector(`#imgCaption${newImgTempID}`);\r\n            newImgContainer.insertBefore(divRow, imgCaption);\r\n\r\n            // add to newComponents array for a future POST request\r\n            newComponentIDs.push(newImgTempID);\r\n        });\r\n\r\n        // Listening for a click on this component as to make the delete button visible if invisible\r\n        newImgContainer.addEventListener('click', () => {\r\n\r\n            // Hiding all currently visible delete buttons\r\n            document.querySelectorAll('.deleteBtn').forEach(e => {\r\n                e.style.display = 'none';\r\n            });\r\n\r\n            // Showing this component's Delete button\r\n            newImgContainer.lastChild.style.display = 'inline-block';\r\n        });\r\n\r\n        // Hiding empty entry message if it's visible\r\n        if (emptyEntryMsg){\r\n            emptyEntryMsg.style.display = \"none\";\r\n        }\r\n\r\n        // Adding delete button event listener\r\n        newImgContainer.querySelector('.deleteBtn').addEventListener('click', () => {\r\n\r\n            // removing from DOM and POST lists upon deletion; no need to send a request\r\n            newComponentIDs = newComponentIDs.filter(element => element != newImgTempID);\r\n            newImgContainer.remove();\r\n            if (!componentContainer.hasChildNodes()){\r\n                emptyEntryMsg = document.createElement('p');\r\n                emptyEntryMsg.id = 'empty';\r\n                emptyEntryMsg.innerText = \"This entry is empty!\";\r\n                componentContainer.append(emptyEntryMsg);\r\n            }\r\n        });\r\n\r\n        // NOTE: new components do not need to be marked for possible PUT or DELETE requests!\r\n    }\r\n\r\n    // saving contents with the SAVE button\r\n    // add keyboard shortcut Alt + s    \r\n    // send necessary PUT, POST, and DELETE requests\r\n    else if (event.target.id == \"saveBtn\"){\r\n\r\n        // hide save btn (fine since it'll refresh)\r\n        document.querySelector('#saveBtn').style.display = 'none';\r\n\r\n        // if emptyEntryMsg DNE or if it has been hidden upon adding new elements\r\n        if (!emptyEntryMsg || emptyEntryMsg.style.display == \"none\"){\r\n\r\n            // will be [1,1,1] when all 3 are done\r\n            let finishedRequests = [0,0,0];\r\n\r\n            /* \r\n                POST\r\n                \r\n                1. Check if any new components exist\r\n                2. Get all new img base64s\r\n                3. Send new shit to server\r\n                4. Verify success\r\n                5. PUT\r\n            */\r\n            if (newComponentIDs.length != 0){\r\n\r\n                newComponentIDs = new Set(newComponentIDs); // deleting duplicates\r\n\r\n                // Getting new img base64s\r\n                let canvas = document.createElement('canvas');\r\n                let context = canvas.getContext('2d');\r\n                let newImageB64s = [];\r\n                newComponentIDs.forEach(id => {\r\n                    \r\n                    // checking if this component is an image; if so, get b64\r\n                    const imgTag = document.querySelector(`#imgData${id}`);\r\n                    if (imgTag){\r\n\r\n                        canvas.width = imgTag.width;\r\n                        canvas.height = imgTag.height;\r\n                        context.drawImage(imgTag, 0, 0, imgTag.width, imgTag.height);\r\n                        newImageB64s.push(canvas.toDataURL('img/jpeg'));\r\n                    }\r\n                }); \r\n\r\n                saveNewComponents(newComponentIDs, newImageB64s, entryID).then(response => {\r\n\r\n                    response.json().then(responseObj => {\r\n\r\n                        console.log(`Save new complete: ${responseObj.status}`); \r\n                        finishedRequests[0] = 1; \r\n                        if (finishedRequests[1] && finishedRequests[2]){\r\n\r\n                            // If the other two requests are done, refresh the page so I don't have to deal with \r\n                            // classifying and preprocessing components a second time\r\n                            location.reload();\r\n                        }                  \r\n                    });\r\n                }).catch(error => {\r\n\r\n                    console.log(`Save new error: ${error}`);\r\n                });\r\n            }\r\n            else{ // if no new components\r\n\r\n                finishedRequests[0] = 1;\r\n            }\r\n\r\n\r\n            /*\r\n                PUT\r\n                1. Delete duplicates\r\n                2. Send all touched components' data to server\r\n                3. Verify success\r\n                4. DELETE!\r\n            */\r\n            if (updatedComponentIDs.length != 0){\r\n\r\n                updatedComponentIDs = new Set(updatedComponentIDs); // deleting duplicates\r\n\r\n                saveUpdatedComponents(updatedComponentIDs).then(response => {\r\n\r\n                    response.json().then(responseObj => {\r\n\r\n                        console.log(`Save updates complete: ${responseObj.status}`);\r\n                        finishedRequests[1] = 1;\r\n\r\n                        if (finishedRequests[0] && finishedRequests[2]){\r\n\r\n                            // If the other two requests are done, refresh the page so I don't have to deal with \r\n                            // classifying and preprocessing components a second time\r\n                            location.reload();\r\n                        }\r\n                    });\r\n                }).catch(error => {\r\n\r\n                    console.log(`Save updates error: ${error}`);\r\n                });\r\n            }\r\n            else{ // if no updated components\r\n                finishedRequests[1] = 1;\r\n            }\r\n\r\n            /* \r\n                DELETE\r\n                1. Send DELETE request\r\n                2. Verify success of server\r\n            */\r\n            if (deletedComponentIDs.length != 0){\r\n\r\n                deletedComponentIDs = new Set(deletedComponentIDs);\r\n                saveDeletedComponents(deletedComponentIDs, deletedComponentDataTypes).then(response => {\r\n\r\n                    response.json().then(responseObj => {\r\n\r\n                        console.log(`Save deleted complete: ${responseObj.status}`);\r\n                        finishedRequests[2] = 1;\r\n\r\n                        if (finishedRequests[0] && finishedRequests[1]){\r\n\r\n                            // If the other two requests are done, refresh the page so I don't have to deal with \r\n                            // classifying and preprocessing components a second time\r\n                            location.reload();\r\n                        }\r\n                    });\r\n                }).catch(error => {\r\n\r\n                    console.log(`Save deleted error: ${error}`);\r\n                });\r\n            }\r\n            else{ // if no deleted components\r\n                finishedRequests[2] = 1;\r\n            }\r\n\r\n        }\r\n        else {\r\n            console.log(\"No new, updated, or deleted components when saved\");\r\n        }\r\n    }\r\n});\r\n\r\n\r\n/*\r\n    Saving contents that were edited if the page gets closed\r\n    (probably not gonna implement this feature since we've moved onto a save button)\r\n*/\r\n\r\nwindow.onunload = () => {\r\n\r\n    document.querySelector('#saveBtn').click();\r\n};\r\n\r\n\r\n/**\r\n * Adding 'Beautify' functionality which at present just hides delete btns\r\n */\r\ndocument.querySelector('#beautify').addEventListener('click', () => {\r\n\r\n    document.querySelectorAll('.deleteBtn').forEach(e => {\r\n        e.style.display = 'none';\r\n    });\r\n});\r\n\r\n\r\n/**\r\n * Setting up and handling the log off btn\r\n */\r\nconst logOffBtn = document.querySelector('#logBtn');\r\nlogOffBtn.innerText = \"Log Off\";\r\nlogOffBtn.addEventListener('click', () => {\r\n\r\n    window.location.href = window.location.href;\r\n})\r\n\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/vaultEntry.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}